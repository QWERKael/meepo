---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by alex.
--- DateTime: 2021/5/8 上午2:05
---

local cmd = require("cmd")
local stringx = require("pl.stringx")
local pretty = require("pl.pretty")

function main()

    os.execute("export https_proxy=http://172.16.72.1:7890 http_proxy=http://172.16.72.1:7890 all_proxy=socks5://172.16.72.1:7890")
    --remove_yum_packages("percona")
    install_percona_mysql("57")

end

function init_mysql()
    os.execute("mkdir -p /data/mysql/data")
    local command = "mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql/data"
    local _, err = cmd.exec(command)
    if err then error(err) end
    if not(result.status == 0) then error("status") end
end

--查找已安装的yum软件包
function find_installed_yum_packages(package_name)
    local command = "yum list installed|grep "..package_name
    local result, err = cmd.exec(command)
    if err then
        error(err)
    end
    return result.stdout
end

--移除指定的yum软件包
function remove_yum_packages(package_name)
    local packages = find_installed_yum_packages(package_name)

    local lines = stringx.splitlines(packages)
    pretty.dump(lines)
    local names = {}
    for idx, line in ipairs(lines) do
        local n = stringx.split(line)
        names[idx] = n[1]
    end

    pretty.dump(names)

    local args = stringx.join((' '), names)
    print("yum remove -y "..args)
    os.execute("yum remove -y "..args)
end

--重新安装percona-release
function reinstall_percona_release()
    remove_yum_packages("percona-release")
    os.execute("yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm")
end

--安装指定版本的percona mysql
function install_percona_mysql(version)
    reinstall_percona_release()
    if version == "57" then
        os.execute("yum install -y Percona-Server-server-57")
    elseif version == "80" then
        os.execute("percona-release setup ps80")
        os.execute("yum install -y percona-server-server")
    end
end

    --local t = io.popen("ping www.baidu.com")
    --local a = t:read("*all")
    --print(a)